<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1-100 on 算法学习笔记</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/</link><description>Recent content in 1-100 on 算法学习笔记</description><generator>Hugo</generator><language>en</language><atom:link href="https://kingye.me/study-algs/docs/advanced/leetcode/0/index.xml" rel="self" type="application/rss+xml"/><item><title>1. 两数之和</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/1/</guid><description>&lt;h1 id="两数之和">
 两数之和
 &lt;a class="anchor" href="#%e4%b8%a4%e6%95%b0%e4%b9%8b%e5%92%8c">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemstwo-sum">
 &lt;a href="https://leetcode-cn.com/problems/two-sum">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemstwo-sum">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个整数数组 nums  和一个目标值 target，请你在该数组中找出和为目标值的那**两个**整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

```
给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

```
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

使用 hash 表，记录过程数据，空间换时间

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go
func twoSum(nums []int, target int) []int {
 tmp := make(map[int]int)
 for k, v := range(nums) {
 first, ok := tmp[v]
 if ok {
 return []int{first, k}
 }

 tmp[target - v] = k
 }

 return []int{}
}
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java
class Solution {
 public int[] twoSum(int[] nums, int target) {
 HashMap &lt;Integer, Integer> tmp = new HashMap&lt;Integer, Integer>();
 for(int i = 0; i &lt; nums.length; i++) {
 if (tmp.get(nums[i]) != null) {
 return new int[] {tmp.get(nums[i]), i};
 } else {
 tmp.put(target - nums[i], i);
 }
 }

 return new int[] {};
 }
}
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution(object):
 def twoSum(self, nums, target):
 """
 :type nums: List[int]
 :type target: int
 :rtype: List[int]
 """
 r = {}
 for i in range(len(nums)):
 if nums[i] in r:
 return i, r[nums[i]]
 else:
 r[target - nums[i]] = i
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def twoSum(self, nums: List[int], target: int) -> List[int]:
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>2. 两数相加</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/2/</guid><description>&lt;h1 id="两数相加">
 两数相加
 &lt;a class="anchor" href="#%e4%b8%a4%e6%95%b0%e7%9b%b8%e5%8a%a0">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsadd-two-numbers">
 &lt;a href="https://leetcode-cn.com/problems/add-two-numbers/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsadd-two-numbers">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给出两个   非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照   逆序   的方式存储的，并且它们的每个节点只能存储   一位   数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0  开头。

示例：

```
输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example:

```
Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.
```

&lt;/div>



&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution(object):
 def addTwoNumbers(self, l1, l2):
 """
 :type l1: ListNode
 :type l2: ListNode
 :rtype: ListNode
 """
 carry = 0
 root = node = ListNode(0)
 while l1 or l2 or carry:
 v1 = v2 = 0
 if l1:
 v1 = l1.val
 l1 = l1.next
 if l2:
 v2 = l2.val
 l2 = l2.next

 carry, val = divmod(v1 + v2 + carry, 10)
 node.next = ListNode(val)
 node = node.next

 return root.next
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
# Definition for singly-linked list.
# class ListNode:
# def __init__(self, x):
# self.val = x
# self.next = None

class Solution:
 def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
 carry = 0
 head = cur = ListNode(0)
 while l1 or l2:
 val1 = val2 = 0
 if l1:
 val1 = l1.val
 l1 = l1.next
 if l2:
 val2 = l2.val
 l2 = l2.next
 tmp = val1 + val2 + carry
 carry = tmp // 10
 cur.next = ListNode(tmp % 10)
 cur = cur.next
 if carry:
 cur.next = ListNode(carry)
 return head.next
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>3. 无重复字符的最长子串</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/3/</guid><description>&lt;h1 id="无重复字符的最长子串">
 无重复字符的最长子串
 &lt;a class="anchor" href="#%e6%97%a0%e9%87%8d%e5%a4%8d%e5%ad%97%e7%ac%a6%e7%9a%84%e6%9c%80%e9%95%bf%e5%ad%90%e4%b8%b2">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemslongest-substring-without-repeating-characters">
 &lt;a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemslongest-substring-without-repeating-characters">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个字符串，请你找出其中不含有重复字符的   最长子串   的长度。

示例  1:

```
输入: "abcabcbb"
输出: 3
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
```

示例 2:

```
输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
```

示例 3:

```
输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
  请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a string, find the length of the longest substring without repeating characters.

Example 1:

```
Input: "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
```

Example 2:

```
Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
```

Example 3:

```
Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
 Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
```

&lt;/div>



&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

举个例子

`yabcdedfayghciajkc`

- 当出现第二个 `a` 时，`bcdedfa` 就是无重复最长字串
- 当出现第二个 `y` 时，最长字串不是 `abcdedfay`，因为包括了两个 `a`
- 所以，`start` 是第一个 `y` 和 `start` （此时是第一个 `a`）中取大的
- 即 `bcdedfay`

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go
func lengthOfLongestSubstring(s string) int {
 charLastPos := make(map[string]int)
 ans, start := 0, 0
 for i := range s {
 si := string(s[i])
 if lastPos, ok := charLastPos[si]; ok {
 start = max(start, lastPos)
 }
 // 如果都没有重复字母，这里必须要 +1
 ans = max(ans, i - start + 1)
 // 为了对应上面 +1，这里也 +1
 charLastPos[si] = i + 1
 }

 return ans
}

func max(a, b int) int {
 if a > b {
 return a
 }
 return b
}
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def lengthOfLongestSubstring(self, s: str) -> int:
 char_last_pos = {}
 start, ans = 0, 0
 for i in range(len(s)):
 if s[i] in char_last_pos:
 start = max(start, char_last_pos[s[i]])
 # 如果都没有重复字母，这里必须要 +1
 ans = max(ans, i - start + 1)
 # 为了对应上面 +1，这里也 +1
 char_last_pos[s[i]] = i + 1

 return ans
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>4. 寻找两个有序数组的中位数</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/4/</guid><description>&lt;h1 id="寻找两个有序数组的中位数">
 寻找两个有序数组的中位数
 &lt;a class="anchor" href="#%e5%af%bb%e6%89%be%e4%b8%a4%e4%b8%aa%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84%e7%9a%84%e4%b8%ad%e4%bd%8d%e6%95%b0">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsmedian-of-two-sorted-arrays">
 &lt;a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsmedian-of-two-sorted-arrays">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定两个大小为 m 和 n 的有序数组  nums1 和  nums2。

请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为  O (log (m + n))。

你可以假设  nums1  和  nums2  不会同时为空。

示例 1:

```
nums1 = [1, 3]
nums2 = [2]

则中位数是 2.0
```

示例 2:

```
nums1 = [1, 2]
nums2 = [3, 4]

则中位数是 (2 + 3)/2 = 2.5
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

```
nums1 = [1, 3]
nums2 = [2]

The median is 2.0
```

Example 2:

```
nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>7. 整数反转</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/7/</guid><description>&lt;h1 id="整数反转">
 整数反转
 &lt;a class="anchor" href="#%e6%95%b4%e6%95%b0%e5%8f%8d%e8%bd%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsreverse-integer">
 &lt;a href="https://leetcode-cn.com/problems/reverse-integer/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsreverse-integer">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem-1" id="tabs-leetcode-problem-1-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-1-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例  1:

```
输入: 123
输出: 321
```

示例 2:

```
输入: -123
输出: -321
```

示例 3:

```
输入: 120
输出: 21
```

注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为

&lt;link rel="stylesheet" href="https://kingye.me/study-algs/study-algs/katex/katex.min.css" />
&lt;script defer src="https://kingye.me/study-algs/study-algs/katex/katex.min.js">&lt;/script>
&lt;script defer src="https://kingye.me/study-algs/study-algs/katex/auto-render.min.js" onload="renderMathInElement(document.body, {
 delimiters: [
 {left: '$$', right: '$$', display: true},
 {left: '\\[', right: '\\]', display: true},
 {left: '$', right: '$', display: false},
 {left: '\\(', right: '\\)', display: false}
 ]
});">&lt;/script>&lt;span>
 \([-2^31, 2^31-1]。\)
&lt;/span>

请根据这个假设，如果反转后整数溢出那么就返回 0。

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem-1" id="tabs-leetcode-problem-1-1" />
&lt;label for="tabs-leetcode-problem-1-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

```
Input: 123
Output: 321
```

Example 2:

```
Input: -123
Output: -321
```

Example 3:

```
Input: 120
Output: 21
```

Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range:
&lt;span>
 \([-2^31, 2^31-1].\)
&lt;/span>

For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis-1" id="tabs-leetcode-analysis-1-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-1-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis-1" id="tabs-leetcode-analysis-1-1" />
&lt;label for="tabs-leetcode-analysis-1-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis-1" id="tabs-leetcode-analysis-1-2" />
&lt;label for="tabs-leetcode-analysis-1-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-1-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-1" />
&lt;label for="tabs-leetcode-solution-1-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-2" />
&lt;label for="tabs-leetcode-solution-1-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-3" />
&lt;label for="tabs-leetcode-solution-1-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-4" />
&lt;label for="tabs-leetcode-solution-1-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-5" />
&lt;label for="tabs-leetcode-solution-1-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-6" />
&lt;label for="tabs-leetcode-solution-1-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-7" />
&lt;label for="tabs-leetcode-solution-1-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-8" />
&lt;label for="tabs-leetcode-solution-1-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">



```python
class Solution(object):
 def reverse(self, x):
 """
 :type x: int
 :rtype: int
 """
 # 符合
 s = cmp(x, 0)
 r = int(str(s * x)[::-1])
 return s * r * (r &lt; 2**31)
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-9" />
&lt;label for="tabs-leetcode-solution-1-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">



`python3` 没有 `cmp` 函数，
使用 `(a > b) - (a &lt; b)` 替代

参考：

- [stackoverflow](https://stackoverflow.com/questions/22490366/how-to-use-cmp-in-python-3)

```python
class Solution:
 def reverse(self, x: int) -> int:
 s = (lambda a, b: (a > b) - (a &lt; b))(x, 0)
 r = int(str(s * x)[::-1])
 return s * r * (r &lt; 2**31)
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-10" />
&lt;label for="tabs-leetcode-solution-1-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-11" />
&lt;label for="tabs-leetcode-solution-1-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-12" />
&lt;label for="tabs-leetcode-solution-1-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-13" />
&lt;label for="tabs-leetcode-solution-1-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-14" />
&lt;label for="tabs-leetcode-solution-1-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div>

&lt;hr>
&lt;h2 id="参考">
 参考
 &lt;a class="anchor" href="#%e5%8f%82%e8%80%83">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.wikiwand.com/zh-cn/TeX">TeX wiki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/KaTeX/KaTeX">KaTeX/KaTeX&lt;/a> &lt;img src="https://img.shields.io/github/stars/KaTeX/KaTeX.svg" alt="Github stars" />&lt;/li>
&lt;/ul></description></item><item><title>9. 回文数</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/9/</guid><description>&lt;h1 id="回文数">
 回文数
 &lt;a class="anchor" href="#%e5%9b%9e%e6%96%87%e6%95%b0">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemspalindrome-number">
 &lt;a href="https://leetcode-cn.com/problems/palindrome-number/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemspalindrome-number">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

```
输入: 121
输出: true
```

示例  2:

```
输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
```

示例 3:

```
输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
```

进阶:

你能不将整数转为字符串来解决这个问题吗？

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

```
Input: 121
Output: true
```

Example 2:

```
Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
```

Example 3:

```
Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
```

Follow up:

Coud you solve it without converting the integer to a string?

&lt;/div>



&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution(object):
 def isPalindrome(self, x):
 """
 :type x: int
 :rtype: bool
 """
 if x &lt; 0:
 return False

 return x == int(str(x)[::-1])
```
&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

## 不将整数转为字符串

TODO

---

## 将整数转为字符串

```python
class Solution:
 def isPalindrome(self, x: int) -> bool:
 if x &lt; 0:
 return False

 return x == int(str(x)[::-1])
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>10. 正则表达式匹配</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/10/</guid><description>&lt;h1 id="正则表达式匹配">
 正则表达式匹配
 &lt;a class="anchor" href="#%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%8c%b9%e9%85%8d">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemstwo-sum">
 &lt;a href="https://leetcode-cn.com/problems/two-sum">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemstwo-sum">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给你一个字符串  s  和一个字符规律  p，请你来实现一个支持 '.'  和  '\*'  的正则表达式匹配。

'.' 匹配任意单个字符
'\*' 匹配零个或多个前面的那一个元素
所谓匹配，是要涵盖   整个   字符串  s 的，而不是部分字符串。

说明:

s  可能为空，且只包含从  a-z  的小写字母。
p  可能为空，且只包含从  a-z  的小写字母，以及字符  .  和  \*。
示例 1:

```
输入:
s = "aa"
p = "a"
输出: false
解释: "a" 无法匹配 "aa" 整个字符串。
```

示例 2:

```
输入:
s = "aa"
p = "a*"
输出: true
解释: 因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 "aa" 可被视为 'a' 重复了一次。
```

示例  3:

```
输入:
s = "ab"
p = ".*"
输出: true
解释: ".*" 表示可匹配零个或多个（'*'）任意字符（'.'）。
```

示例 4:

```
输入:
s = "aab"
p = "c*a*b"
输出: true
解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 "aab"。
```

示例 5:

```
输入:
s = "mississippi"
p = "mis*is*p*."
输出: false
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given an input string (s) and a pattern (p), implement regular expression matching with support for '.' and '\*'.

'.' Matches any single character.
'\*' Matches zero or more of the preceding element.
The matching should cover the entire input string (not partial).

Note:

s could be empty and contains only lowercase letters a-z.
p could be empty and contains only lowercase letters a-z, and characters like . or \*.
Example 1:

```
Input:
s = "aa"
p = "a"
Output: false
Explanation: "a" does not match the entire string "aa".
```

Example 2:

```
Input:
s = "aa"
p = "a*"
Output: true
Explanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes "aa".
```

Example 3:

```
Input:
s = "ab"
p = ".*"
Output: true
Explanation: ".*" means "zero or more (*) of any character (.)".
```

Example 4:

```
Input:
s = "aab"
p = "c*a*b"
Output: true
Explanation: c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches "aab".
```

Example 5:

```
Input:
s = "mississippi"
p = "mis*is*p*."
Output: false
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>54. 螺旋矩阵</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/54/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/54/</guid><description>&lt;h1 id="螺旋矩阵">
 螺旋矩阵
 &lt;a class="anchor" href="#%e8%9e%ba%e6%97%8b%e7%9f%a9%e9%98%b5">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsspiral-matrix">
 &lt;a href="https://leetcode-cn.com/problems/spiral-matrix">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsspiral-matrix">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个包含  m x n  个元素的矩阵（m 行，n 列），请按照顺时针螺旋顺序，返回矩阵中的所有元素。

示例  1:

```
输入:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
输出: [1,2,3,6,9,8,7,4,5]
```

示例  2:

```
输入:
[
 [1, 2, 3, 4],
 [5, 6, 7, 8],
 [9,10,11,12]
]
输出: [1,2,3,4,8,12,11,10,9,5,6,7]
```

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

```
Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
```

Example 2:

```
Input:
[
 [1, 2, 3, 4],
 [5, 6, 7, 8],
 [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
 if not matrix:
 return []
 # 第一行，按顺序
 result = matrix.pop(0)
 # 最右侧
 for i, l in enumerate(matrix[:-1]):
 if l:
 result.append(matrix[i].pop())
 # 最后一行
 if matrix:
 result.extend(matrix.pop()[::-1])
 # 最左侧
 for i, l in enumerate(matrix[::-1]):
 if l:
 result.append(matrix[::-1][i].pop(0))
 # 递归，合并结果
 result.extend(self.spiralOrder(matrix))
 return result
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item><item><title>71. 简化路径</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/71/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/71/</guid><description>&lt;h1 id="模板">
 模板
 &lt;a class="anchor" href="#%e6%a8%a1%e6%9d%bf">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemssimplify-path">
 &lt;a href="https://leetcode-cn.com/problems/simplify-path/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemssimplify-path">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
以 Unix 风格给出一个文件的绝对路径，你需要简化它。或者换句话说，将其转换为规范路径。

在 Unix 风格的文件系统中，一个点（.）表示当前目录本身；此外，两个点 （..）  表示将目录切换到上一级（指向父目录）；两者都可以是复杂相对路径的组成部分。更多信息请参阅：Linux / Unix 中的绝对路径 vs 相对路径

请注意，返回的规范路径必须始终以斜杠 / 开头，并且两个目录名之间必须只有一个斜杠 /。最后一个目录名（如果存在）不能以 / 结尾。此外，规范路径必须是表示绝对路径的最短字符串。

示例 1：

```
输入："/home/"
输出："/home"
解释：注意，最后一个目录名后面没有斜杠。
```

示例 2：

```
输入："/../"
输出："/"
解释：从根目录向上一级是不可行的，因为根是你可以到达的最高级。
```

示例 3：

```
输入："/home//foo/"
输出："/home/foo"
解释：在规范路径中，多个连续斜杠需要用一个斜杠替换。
```

示例 4：

```
输入："/a/./b/../../c/"
输出："/c"
```

示例 5：

```
输入："/a/../../b/../c//.//"
输出："/c"
```

示例 6：

```
输入："/a//b////c/d//././/.."
输出："/a/b/c"
```

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given an absolute path for a file (Unix-style), simplify it. Or in other words, convert it to the canonical path.

In a UNIX-style file system, a period . refers to the current directory. Furthermore, a double period .. moves the directory up a level.

Note that the returned canonical path must always begin with a slash /, and there must be only a single slash / between two directory names. The last directory name (if it exists) must not end with a trailing /. Also, the canonical path must be the shortest string representing the absolute path.

Example 1:

```
Input: "/home/"
Output: "/home"
Explanation: Note that there is no trailing slash after the last directory name.
```

Example 2:

```
Input: "/../"
Output: "/"
Explanation: Going one level up from the root directory is a no-op, as the root level is the highest level you can go.
```

Example 3:

```
Input: "/home//foo/"
Output: "/home/foo"
Explanation: In the canonical path, multiple consecutive slashes are replaced by a single one.
```

Example 4:

```
Input: "/a/./b/../../c/"
Output: "/c"
```

Example 5:

```
Input: "/a/../../b/../c//.//"
Output: "/c"
```

Example 6:

```
Input: "/a//b////c/d//././/.."
Output: "/a/b/c"
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

先按 `/` 进行切割，然后创建一个 `stack`，判断为 `.` 就跳过，为 `..` 就 `pop`（`stack` 非空），其他就 `append`

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def simplifyPath(self, path: str) -> str:
 ps = [p for p in path.split('/') if p]
 stack = list()
 for p in ps:
 if p == '.':
 continue
 elif p == '..':
 if stack:
 stack.pop()
 else:
 stack.append(p)

 return '/' + '/'.join(stack)
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item></channel></rss>