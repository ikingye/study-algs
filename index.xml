<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>首页 on 算法学习笔记</title><link>https://kingye.me/study-algs/</link><description>Recent content in 首页 on 算法学习笔记</description><generator>Hugo</generator><language>en</language><atom:link href="https://kingye.me/study-algs/index.xml" rel="self" type="application/rss+xml"/><item><title>1. 两数之和</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/1/</guid><description>&lt;h1 id="两数之和">
 两数之和
 &lt;a class="anchor" href="#%e4%b8%a4%e6%95%b0%e4%b9%8b%e5%92%8c">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemstwo-sum">
 &lt;a href="https://leetcode-cn.com/problems/two-sum">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemstwo-sum">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个整数数组 nums  和一个目标值 target，请你在该数组中找出和为目标值的那**两个**整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

```
给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

```
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

使用 hash 表，记录过程数据，空间换时间

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go
func twoSum(nums []int, target int) []int {
 tmp := make(map[int]int)
 for k, v := range(nums) {
 first, ok := tmp[v]
 if ok {
 return []int{first, k}
 }

 tmp[target - v] = k
 }

 return []int{}
}
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java
class Solution {
 public int[] twoSum(int[] nums, int target) {
 HashMap &lt;Integer, Integer> tmp = new HashMap&lt;Integer, Integer>();
 for(int i = 0; i &lt; nums.length; i++) {
 if (tmp.get(nums[i]) != null) {
 return new int[] {tmp.get(nums[i]), i};
 } else {
 tmp.put(target - nums[i], i);
 }
 }

 return new int[] {};
 }
}
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution(object):
 def twoSum(self, nums, target):
 """
 :type nums: List[int]
 :type target: int
 :rtype: List[int]
 """
 r = {}
 for i in range(len(nums)):
 if nums[i] in r:
 return i, r[nums[i]]
 else:
 r[target - nums[i]] = i
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def twoSum(self, nums: List[int], target: int) -> List[int]:
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>2. 两数相加</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/2/</guid><description>&lt;h1 id="两数相加">
 两数相加
 &lt;a class="anchor" href="#%e4%b8%a4%e6%95%b0%e7%9b%b8%e5%8a%a0">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsadd-two-numbers">
 &lt;a href="https://leetcode-cn.com/problems/add-two-numbers/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsadd-two-numbers">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给出两个   非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照   逆序   的方式存储的，并且它们的每个节点只能存储   一位   数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0  开头。

示例：

```
输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example:

```
Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.
```

&lt;/div>



&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution(object):
 def addTwoNumbers(self, l1, l2):
 """
 :type l1: ListNode
 :type l2: ListNode
 :rtype: ListNode
 """
 carry = 0
 root = node = ListNode(0)
 while l1 or l2 or carry:
 v1 = v2 = 0
 if l1:
 v1 = l1.val
 l1 = l1.next
 if l2:
 v2 = l2.val
 l2 = l2.next

 carry, val = divmod(v1 + v2 + carry, 10)
 node.next = ListNode(val)
 node = node.next

 return root.next
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
# Definition for singly-linked list.
# class ListNode:
# def __init__(self, x):
# self.val = x
# self.next = None

class Solution:
 def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
 carry = 0
 head = cur = ListNode(0)
 while l1 or l2:
 val1 = val2 = 0
 if l1:
 val1 = l1.val
 l1 = l1.next
 if l2:
 val2 = l2.val
 l2 = l2.next
 tmp = val1 + val2 + carry
 carry = tmp // 10
 cur.next = ListNode(tmp % 10)
 cur = cur.next
 if carry:
 cur.next = ListNode(carry)
 return head.next
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>3. 无重复字符的最长子串</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/3/</guid><description>&lt;h1 id="无重复字符的最长子串">
 无重复字符的最长子串
 &lt;a class="anchor" href="#%e6%97%a0%e9%87%8d%e5%a4%8d%e5%ad%97%e7%ac%a6%e7%9a%84%e6%9c%80%e9%95%bf%e5%ad%90%e4%b8%b2">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemslongest-substring-without-repeating-characters">
 &lt;a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemslongest-substring-without-repeating-characters">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个字符串，请你找出其中不含有重复字符的   最长子串   的长度。

示例  1:

```
输入: "abcabcbb"
输出: 3
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
```

示例 2:

```
输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
```

示例 3:

```
输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
  请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a string, find the length of the longest substring without repeating characters.

Example 1:

```
Input: "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
```

Example 2:

```
Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
```

Example 3:

```
Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
 Note that the answer must be a substring, "pwke" is a subsequence and not a substring.
```

&lt;/div>



&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

举个例子

`yabcdedfayghciajkc`

- 当出现第二个 `a` 时，`bcdedfa` 就是无重复最长字串
- 当出现第二个 `y` 时，最长字串不是 `abcdedfay`，因为包括了两个 `a`
- 所以，`start` 是第一个 `y` 和 `start` （此时是第一个 `a`）中取大的
- 即 `bcdedfay`

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go
func lengthOfLongestSubstring(s string) int {
 charLastPos := make(map[string]int)
 ans, start := 0, 0
 for i := range s {
 si := string(s[i])
 if lastPos, ok := charLastPos[si]; ok {
 start = max(start, lastPos)
 }
 // 如果都没有重复字母，这里必须要 +1
 ans = max(ans, i - start + 1)
 // 为了对应上面 +1，这里也 +1
 charLastPos[si] = i + 1
 }

 return ans
}

func max(a, b int) int {
 if a > b {
 return a
 }
 return b
}
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def lengthOfLongestSubstring(self, s: str) -> int:
 char_last_pos = {}
 start, ans = 0, 0
 for i in range(len(s)):
 if s[i] in char_last_pos:
 start = max(start, char_last_pos[s[i]])
 # 如果都没有重复字母，这里必须要 +1
 ans = max(ans, i - start + 1)
 # 为了对应上面 +1，这里也 +1
 char_last_pos[s[i]] = i + 1

 return ans
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>4. 寻找两个有序数组的中位数</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/4/</guid><description>&lt;h1 id="寻找两个有序数组的中位数">
 寻找两个有序数组的中位数
 &lt;a class="anchor" href="#%e5%af%bb%e6%89%be%e4%b8%a4%e4%b8%aa%e6%9c%89%e5%ba%8f%e6%95%b0%e7%bb%84%e7%9a%84%e4%b8%ad%e4%bd%8d%e6%95%b0">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsmedian-of-two-sorted-arrays">
 &lt;a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsmedian-of-two-sorted-arrays">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定两个大小为 m 和 n 的有序数组  nums1 和  nums2。

请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为  O (log (m + n))。

你可以假设  nums1  和  nums2  不会同时为空。

示例 1:

```
nums1 = [1, 3]
nums2 = [2]

则中位数是 2.0
```

示例 2:

```
nums1 = [1, 2]
nums2 = [3, 4]

则中位数是 (2 + 3)/2 = 2.5
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

```
nums1 = [1, 3]
nums2 = [2]

The median is 2.0
```

Example 2:

```
nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>7. 整数反转</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/7/</guid><description>&lt;h1 id="整数反转">
 整数反转
 &lt;a class="anchor" href="#%e6%95%b4%e6%95%b0%e5%8f%8d%e8%bd%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsreverse-integer">
 &lt;a href="https://leetcode-cn.com/problems/reverse-integer/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsreverse-integer">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem-1" id="tabs-leetcode-problem-1-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-1-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。

示例  1:

```
输入: 123
输出: 321
```

示例 2:

```
输入: -123
输出: -321
```

示例 3:

```
输入: 120
输出: 21
```

注意:

假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为

&lt;link rel="stylesheet" href="https://kingye.me/study-algs/study-algs/katex/katex.min.css" />
&lt;script defer src="https://kingye.me/study-algs/study-algs/katex/katex.min.js">&lt;/script>
&lt;script defer src="https://kingye.me/study-algs/study-algs/katex/auto-render.min.js" onload="renderMathInElement(document.body, {
 delimiters: [
 {left: '$$', right: '$$', display: true},
 {left: '\\[', right: '\\]', display: true},
 {left: '$', right: '$', display: false},
 {left: '\\(', right: '\\)', display: false}
 ]
});">&lt;/script>&lt;span>
 \([-2^31, 2^31-1]。\)
&lt;/span>

请根据这个假设，如果反转后整数溢出那么就返回 0。

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem-1" id="tabs-leetcode-problem-1-1" />
&lt;label for="tabs-leetcode-problem-1-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

```
Input: 123
Output: 321
```

Example 2:

```
Input: -123
Output: -321
```

Example 3:

```
Input: 120
Output: 21
```

Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range:
&lt;span>
 \([-2^31, 2^31-1].\)
&lt;/span>

For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis-1" id="tabs-leetcode-analysis-1-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-1-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis-1" id="tabs-leetcode-analysis-1-1" />
&lt;label for="tabs-leetcode-analysis-1-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis-1" id="tabs-leetcode-analysis-1-2" />
&lt;label for="tabs-leetcode-analysis-1-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-1-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-1" />
&lt;label for="tabs-leetcode-solution-1-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-2" />
&lt;label for="tabs-leetcode-solution-1-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-3" />
&lt;label for="tabs-leetcode-solution-1-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-4" />
&lt;label for="tabs-leetcode-solution-1-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-5" />
&lt;label for="tabs-leetcode-solution-1-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-6" />
&lt;label for="tabs-leetcode-solution-1-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-7" />
&lt;label for="tabs-leetcode-solution-1-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-8" />
&lt;label for="tabs-leetcode-solution-1-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">



```python
class Solution(object):
 def reverse(self, x):
 """
 :type x: int
 :rtype: int
 """
 # 符合
 s = cmp(x, 0)
 r = int(str(s * x)[::-1])
 return s * r * (r &lt; 2**31)
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-9" />
&lt;label for="tabs-leetcode-solution-1-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">



`python3` 没有 `cmp` 函数，
使用 `(a > b) - (a &lt; b)` 替代

参考：

- [stackoverflow](https://stackoverflow.com/questions/22490366/how-to-use-cmp-in-python-3)

```python
class Solution:
 def reverse(self, x: int) -> int:
 s = (lambda a, b: (a > b) - (a &lt; b))(x, 0)
 r = int(str(s * x)[::-1])
 return s * r * (r &lt; 2**31)
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-10" />
&lt;label for="tabs-leetcode-solution-1-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-11" />
&lt;label for="tabs-leetcode-solution-1-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-12" />
&lt;label for="tabs-leetcode-solution-1-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-13" />
&lt;label for="tabs-leetcode-solution-1-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution-1" id="tabs-leetcode-solution-1-14" />
&lt;label for="tabs-leetcode-solution-1-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div>

&lt;hr>
&lt;h2 id="参考">
 参考
 &lt;a class="anchor" href="#%e5%8f%82%e8%80%83">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.wikiwand.com/zh-cn/TeX">TeX wiki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/KaTeX/KaTeX">KaTeX/KaTeX&lt;/a> &lt;img src="https://img.shields.io/github/stars/KaTeX/KaTeX.svg" alt="Github stars" />&lt;/li>
&lt;/ul></description></item><item><title>9. 回文数</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/9/</guid><description>&lt;h1 id="回文数">
 回文数
 &lt;a class="anchor" href="#%e5%9b%9e%e6%96%87%e6%95%b0">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemspalindrome-number">
 &lt;a href="https://leetcode-cn.com/problems/palindrome-number/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemspalindrome-number">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。

示例 1:

```
输入: 121
输出: true
```

示例  2:

```
输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。
```

示例 3:

```
输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
```

进阶:

你能不将整数转为字符串来解决这个问题吗？

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.

Example 1:

```
Input: 121
Output: true
```

Example 2:

```
Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
```

Example 3:

```
Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
```

Follow up:

Coud you solve it without converting the integer to a string?

&lt;/div>



&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution(object):
 def isPalindrome(self, x):
 """
 :type x: int
 :rtype: bool
 """
 if x &lt; 0:
 return False

 return x == int(str(x)[::-1])
```
&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

## 不将整数转为字符串

TODO

---

## 将整数转为字符串

```python
class Solution:
 def isPalindrome(self, x: int) -> bool:
 if x &lt; 0:
 return False

 return x == int(str(x)[::-1])
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>1.3.1 排序算法</title><link>https://kingye.me/study-algs/docs/advanced/common/sort/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/common/sort/</guid><description>&lt;h1 id="排序算法">
 排序算法
 &lt;a class="anchor" href="#%e6%8e%92%e5%ba%8f%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/ikingye/imagehost/picgo/20200424114357.png" alt="" />&lt;/p></description></item><item><title>10. 正则表达式匹配</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/10/</guid><description>&lt;h1 id="正则表达式匹配">
 正则表达式匹配
 &lt;a class="anchor" href="#%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%8c%b9%e9%85%8d">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemstwo-sum">
 &lt;a href="https://leetcode-cn.com/problems/two-sum">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemstwo-sum">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给你一个字符串  s  和一个字符规律  p，请你来实现一个支持 '.'  和  '\*'  的正则表达式匹配。

'.' 匹配任意单个字符
'\*' 匹配零个或多个前面的那一个元素
所谓匹配，是要涵盖   整个   字符串  s 的，而不是部分字符串。

说明:

s  可能为空，且只包含从  a-z  的小写字母。
p  可能为空，且只包含从  a-z  的小写字母，以及字符  .  和  \*。
示例 1:

```
输入:
s = "aa"
p = "a"
输出: false
解释: "a" 无法匹配 "aa" 整个字符串。
```

示例 2:

```
输入:
s = "aa"
p = "a*"
输出: true
解释: 因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 "aa" 可被视为 'a' 重复了一次。
```

示例  3:

```
输入:
s = "ab"
p = ".*"
输出: true
解释: ".*" 表示可匹配零个或多个（'*'）任意字符（'.'）。
```

示例 4:

```
输入:
s = "aab"
p = "c*a*b"
输出: true
解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 "aab"。
```

示例 5:

```
输入:
s = "mississippi"
p = "mis*is*p*."
输出: false
```

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given an input string (s) and a pattern (p), implement regular expression matching with support for '.' and '\*'.

'.' Matches any single character.
'\*' Matches zero or more of the preceding element.
The matching should cover the entire input string (not partial).

Note:

s could be empty and contains only lowercase letters a-z.
p could be empty and contains only lowercase letters a-z, and characters like . or \*.
Example 1:

```
Input:
s = "aa"
p = "a"
Output: false
Explanation: "a" does not match the entire string "aa".
```

Example 2:

```
Input:
s = "aa"
p = "a*"
Output: true
Explanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes "aa".
```

Example 3:

```
Input:
s = "ab"
p = ".*"
Output: true
Explanation: ".*" means "zero or more (*) of any character (.)".
```

Example 4:

```
Input:
s = "aab"
p = "c*a*b"
Output: true
Explanation: c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches "aab".
```

Example 5:

```
Input:
s = "mississippi"
p = "mis*is*p*."
Output: false
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-14" />
&lt;label for="tabs-leetcode-solution-14">TypeScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```typescript

```

&lt;/div>


---


&lt;/div></description></item><item><title>4.1 教程</title><link>https://kingye.me/study-algs/docs/appendix/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/appendix/tutorial/</guid><description>&lt;h1 id="算法教程">
 算法教程
 &lt;a class="anchor" href="#%e7%ae%97%e6%b3%95%e6%95%99%e7%a8%8b">#&lt;/a>
&lt;/h1>
&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;h3 id="labuladongfucking-algorithmhttpsgithubcomlabuladongfucking-algorithm-github-starshttpsimgshieldsiogithubstarslabuladongfucking-algorithmsvg-languagehttpsimgshieldsiogithublanguagestoplabuladongfucking-algorithmsvg-last-taghttpsimgshieldsiogithubvtaglabuladongfucking-algorithmsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitlabuladongfucking-algorithmsvg">
 &lt;a href="https://github.com/labuladong/fucking-algorithm">labuladong/fucking-algorithm&lt;/a> &lt;img src="https://img.shields.io/github/stars/labuladong/fucking-algorithm.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/labuladong/fucking-algorithm.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/labuladong/fucking-algorithm.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/labuladong/fucking-algorithm.svg" alt="Last commit" />
 &lt;a class="anchor" href="#labuladongfucking-algorithmhttpsgithubcomlabuladongfucking-algorithm-github-starshttpsimgshieldsiogithubstarslabuladongfucking-algorithmsvg-languagehttpsimgshieldsiogithublanguagestoplabuladongfucking-algorithmsvg-last-taghttpsimgshieldsiogithubvtaglabuladongfucking-algorithmsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitlabuladongfucking-algorithmsvg">#&lt;/a>
&lt;/h3>
&lt;p>手把手撕 LeetCode 题目，扒各种算法套路的裤子，
not only how，but also why. English version supported!
&lt;a href="https://labuladong.gitbook.io/algo/">https://labuladong.gitbook.io/algo/&lt;/a>&lt;/p>
&lt;h3 id="youngyangyang04leetcode-masterhttpsgithubcomyoungyangyang04leetcode-master-github-starshttpsimgshieldsiogithubstarsyoungyangyang04leetcode-mastersvg-languagehttpsimgshieldsiogithublanguagestopyoungyangyang04leetcode-mastersvg-last-taghttpsimgshieldsiogithubvtagyoungyangyang04leetcode-mastersvgsortsemver-last-commithttpsimgshieldsiogithublast-commityoungyangyang04leetcode-mastersvg">
 &lt;a href="https://github.com/youngyangyang04/leetcode-master">youngyangyang04/leetcode-master&lt;/a> &lt;img src="https://img.shields.io/github/stars/youngyangyang04/leetcode-master.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/youngyangyang04/leetcode-master.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/youngyangyang04/leetcode-master.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/youngyangyang04/leetcode-master.svg" alt="Last commit" />
 &lt;a class="anchor" href="#youngyangyang04leetcode-masterhttpsgithubcomyoungyangyang04leetcode-master-github-starshttpsimgshieldsiogithubstarsyoungyangyang04leetcode-mastersvg-languagehttpsimgshieldsiogithublanguagestopyoungyangyang04leetcode-mastersvg-last-taghttpsimgshieldsiogithubvtagyoungyangyang04leetcode-mastersvgsortsemver-last-commithttpsimgshieldsiogithublast-commityoungyangyang04leetcode-mastersvg">#&lt;/a>
&lt;/h3>
&lt;p>LeetCode 刷题攻略&lt;/p>
&lt;h3 id="donnemartininteractive-coding-challengeshttpsgithubcomdonnemartininteractive-coding-challenges-github-starshttpsimgshieldsiogithubstarsdonnemartininteractive-coding-challengessvg">
 &lt;a href="https://github.com/donnemartin/interactive-coding-challenges">donnemartin/interactive-coding-challenges&lt;/a> &lt;img src="https://img.shields.io/github/stars/donnemartin/interactive-coding-challenges.svg" alt="Github stars" />
 &lt;a class="anchor" href="#donnemartininteractive-coding-challengeshttpsgithubcomdonnemartininteractive-coding-challenges-github-starshttpsimgshieldsiogithubstarsdonnemartininteractive-coding-challengessvg">#&lt;/a>
&lt;/h3>
&lt;p>120+ interactive Python coding interview challenges (algorithms and data structures). Includes Anki flashcards.&lt;/p>
&lt;h3 id="bookkevin-waynealgs4httpsgithubcomkevin-waynealgs4-github-starshttpsimgshieldsiogithubstarskevin-waynealgs4svg">
 (book)&lt;a href="https://github.com/kevin-wayne/algs4">kevin-wayne/algs4&lt;/a> &lt;img src="https://img.shields.io/github/stars/kevin-wayne/algs4.svg" alt="Github stars" />
 &lt;a class="anchor" href="#bookkevin-waynealgs4httpsgithubcomkevin-waynealgs4-github-starshttpsimgshieldsiogithubstarskevin-waynealgs4svg">#&lt;/a>
&lt;/h3>
&lt;p>Algorithms, 4th edition textbook code and libraries&lt;/p>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2></description></item><item><title>LRU Cache</title><link>https://kingye.me/study-algs/docs/advanced/common/lru/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/common/lru/</guid><description>&lt;h1 id="lru-cache">
 LRU Cache
 &lt;a class="anchor" href="#lru-cache">#&lt;/a>
&lt;/h1>
&lt;p>LRU 全称是 &lt;code>Least Recently Used&lt;/code>，即最近最久未使用的意思。&lt;/p>
&lt;p>LRU 算法的设计原则是：如果一个数据在最近一段时间没有被访问到，那么在将来它被访问的可能性也很小。
也就是说，当限定的空间已存满数据时，应当把最久没有被访问到的数据淘汰。&lt;/p>
&lt;h2 id="lru-k">
 LRU-K
 &lt;a class="anchor" href="#lru-k">#&lt;/a>
&lt;/h2>
&lt;p>LRU-K 中的 K 代表最近使用的次数，因此 LRU 可以认为是 LRU-1。&lt;/p>
&lt;p>LRU-K 的主要目的是为了解决 LRU 算法 “缓存污染” 的问题，
其核心思想是将 “最近使用过 1 次” 的判断标准扩展为 “最近使用过 K 次”。&lt;/p>
&lt;h2 id="redis-的-lru-实现">
 Redis 的 LRU 实现
 &lt;a class="anchor" href="#redis-%e7%9a%84-lru-%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2>
&lt;p>如果按照 HashMap 和双向链表实现，需要额外的存储存放 next 和 prev 指针，牺牲比较大的存储空间，显然是不划算的。所以 Redis 采用了一个近似的做法，就是随机取出若干个 key，然后按照访问时间排序后，淘汰掉最不经常使用的，具体分析如下：&lt;/p>
&lt;p>为了支持 LRU，Redis 2.8.19 中使用了一个全局的 LRU 时钟，&lt;code>server.lruclock&lt;/code>，定义如下，&lt;/p>
&lt;pre tabindex="0">&lt;code>#define REDIS_LRU_BITS 24
unsigned lruclock:REDIS_LRU_BITS; /* Clock for LRU eviction */
&lt;/code>&lt;/pre>&lt;p>默认的 LRU 时钟的分辨率是 1 秒，可以通过改变  &lt;code>REDIS_LRU_CLOCK_RESOLUTION&lt;/code>  宏的值来改变，Redis 会在  &lt;code>serverCron()&lt;/code>  中调用  &lt;code>updateLRUClock&lt;/code>  定期的更新 LRU 时钟，更新的频率和 hz 参数有关，默认为  &lt;code>100ms&lt;/code>  一次，如下，&lt;/p></description></item><item><title>paxos</title><link>https://kingye.me/study-algs/docs/advanced/common/paxos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/common/paxos/</guid><description>&lt;h1 id="paxos">
 paxos
 &lt;a class="anchor" href="#paxos">#&lt;/a>
&lt;/h1></description></item><item><title>raft</title><link>https://kingye.me/study-algs/docs/advanced/common/raft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/common/raft/</guid><description>&lt;h1 id="raft">
 raft
 &lt;a class="anchor" href="#raft">#&lt;/a>
&lt;/h1></description></item><item><title>树</title><link>https://kingye.me/study-algs/docs/advanced/common/tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/common/tree/</guid><description>&lt;h1 id="树">
 树
 &lt;a class="anchor" href="#%e6%a0%91">#&lt;/a>
&lt;/h1>
&lt;h2 id="判断一棵树是否包含另一棵树的结构">
 判断一棵树是否包含另一棵树的结构
 &lt;a class="anchor" href="#%e5%88%a4%e6%96%ad%e4%b8%80%e6%a3%b5%e6%a0%91%e6%98%af%e5%90%a6%e5%8c%85%e5%90%ab%e5%8f%a6%e4%b8%80%e6%a3%b5%e6%a0%91%e7%9a%84%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>使用树结构序列化的方法，将两棵树进行相同方式的序列化，然后利用 &lt;strong>kmp&lt;/strong> 判断子串，则可以得到&lt;/p>
&lt;p>结果，时间复杂度为 O（m+n）&lt;/p>
&lt;p>这道题的可行性是：&lt;strong>树结构的序列化和反序列化是一一对应的&lt;/strong>&lt;/p>
&lt;hr></description></item><item><title>4.2 面试题</title><link>https://kingye.me/study-algs/docs/appendix/interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/appendix/interview/</guid><description>&lt;h1 id="算法面试题">
 算法面试题
 &lt;a class="anchor" href="#%e7%ae%97%e6%b3%95%e9%9d%a2%e8%af%95%e9%a2%98">#&lt;/a>
&lt;/h1>
&lt;h2 id="基础题">
 基础题
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;h2 id="进阶题">
 进阶题
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6%e9%a2%98">#&lt;/a>
&lt;/h2></description></item><item><title>KMP</title><link>https://kingye.me/study-algs/docs/advanced/common/kmp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/common/kmp/</guid><description>&lt;h1 id="kmp">
 KMP
 &lt;a class="anchor" href="#kmp">#&lt;/a>
&lt;/h1>
&lt;p>KMP 是用来找字符串匹配的&lt;/p>
&lt;p>KMP 的时间复杂度是 O (m + n)&lt;/p>
&lt;h2 id="参考">
 参考
 &lt;a class="anchor" href="#%e5%8f%82%e8%80%83">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.zhihu.com/question/21923021">如何更好地理解和掌握 KMP 算法？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/83334559">KMP 算法详解&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.inf.hs-flensburg.de/lang/algorithmen/pattern/kmpen.htm">Knuth-Morris-Pratt algorithm&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/112861530">KMP：花 48 小时看懂了 KMP，想让你在 48 分钟内看懂&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>布隆过滤器</title><link>https://kingye.me/study-algs/docs/advanced/common/bloom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/common/bloom/</guid><description>&lt;h1 id="布隆过滤器httpswwwwikiwandcomzh-cne5b883e99a86e8bf87e6bba4e599a8">
 &lt;a href="https://www.wikiwand.com/zh-cn/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8">布隆过滤器&lt;/a>
 &lt;a class="anchor" href="#%e5%b8%83%e9%9a%86%e8%bf%87%e6%bb%a4%e5%99%a8httpswwwwikiwandcomzh-cne5b883e99a86e8bf87e6bba4e599a8">#&lt;/a>
&lt;/h1>
&lt;p>布隆过滤器（Bloom Filter）是 1970 年由布隆提出的。
它实际上是一个&lt;strong>很长的二进制向量&lt;/strong>和&lt;strong>一系列随机映射函数&lt;/strong>。
布隆过滤器可以用于检索一个元素是否在一个集合中。
它的优点是&lt;strong>空间效率&lt;/strong>和&lt;strong>查询时间&lt;/strong>都比一般的算法要好的多，
缺点是有一定的&lt;strong>误识别率&lt;/strong>和&lt;strong>删除困难&lt;/strong>。&lt;/p>
&lt;p>解决：
网页 URL 去重、垃圾邮件识别、大集合中重复元素的判断和缓存穿透等问题&lt;/p>
&lt;p>本质上布隆过滤器是一种数据结构，比较巧妙的概率型数据结构（probabilistic data structure），特点是高效地插入和查询，可以用来告诉你
某样东西&lt;strong>一定不存在&lt;/strong>或者&lt;strong>可能存在&lt;/strong>。&lt;/p>
&lt;p>相比于传统的 List、Set、Map 等数据结构，它更高效、占用空间更少，但是缺点是其返回的结果是概率性的，而不是确切的。&lt;/p>
&lt;h2 id="hashmap-的问题">
 HashMap 的问题
 &lt;a class="anchor" href="#hashmap-%e7%9a%84%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>例如存储容量占比高，考虑到负载因子的存在，通常空间是不能被用满的，而一旦你的值很多例如上亿的时候，那 HashMap 占据的内存大小就变得很可观了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>还比如说你的数据集存储在远程服务器上，本地服务接受输入，而数据集非常大不可能&lt;strong>一次性读进内存&lt;/strong>构建 HashMap 的时候，也会存在问题。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="布隆过滤器的原理">
 布隆过滤器的原理
 &lt;a class="anchor" href="#%e5%b8%83%e9%9a%86%e8%bf%87%e6%bb%a4%e5%99%a8%e7%9a%84%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h2>
&lt;p>当一个元素被加入集合时，通过 K 个&lt;a href="https://www.wikiwand.com/zh-cn/%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0">散列函数&lt;/a>将这个元素映射成一个位&lt;a href="https://www.wikiwand.com/zh-cn/%E6%95%B0%E7%BB%84" title="数组">数组&lt;/a>中的 K 个点，把它们置为 1。检索时，我们只要看看这些点是不是都是 1 就（大约）知道集合中有没有它了：如果这些点有任何一个 0，则被检元素一定不在；如果都是 1，则被检元素很可能在。&lt;/p>
&lt;hr>
&lt;h2 id="应用">
 应用
 &lt;a class="anchor" href="#%e5%ba%94%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>在大数据场景应用比较多，比如 Hbase 中使用它去判断数据是否在磁盘上。&lt;/p>
&lt;p>还有在爬虫场景判断 url 是否已经被爬取过。&lt;/p>
&lt;h3 id="在缓存之前在加一层-bloomfilter">
 在缓存之前在加一层 BloomFilter
 &lt;a class="anchor" href="#%e5%9c%a8%e7%bc%93%e5%ad%98%e4%b9%8b%e5%89%8d%e5%9c%a8%e5%8a%a0%e4%b8%80%e5%b1%82-bloomfilter">#&lt;/a>
&lt;/h3></description></item><item><title>递归</title><link>https://kingye.me/study-algs/docs/basic/thought/recursive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/basic/thought/recursive/</guid><description>&lt;h1 id="递归">
 递归
 &lt;a class="anchor" href="#%e9%80%92%e5%bd%92">#&lt;/a>
&lt;/h1>
&lt;h2 id="参考">
 参考
 &lt;a class="anchor" href="#%e5%8f%82%e8%80%83">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://lyl0724.github.io/2020/01/25/1/">三道题套路解决递归问题&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>4.3 关注项目</title><link>https://kingye.me/study-algs/docs/appendix/attention/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/appendix/attention/</guid><description>&lt;h1 id="关注项目">
 关注项目
 &lt;a class="anchor" href="#%e5%85%b3%e6%b3%a8%e9%a1%b9%e7%9b%ae">#&lt;/a>
&lt;/h1></description></item><item><title>54. 螺旋矩阵</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/54/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/54/</guid><description>&lt;h1 id="螺旋矩阵">
 螺旋矩阵
 &lt;a class="anchor" href="#%e8%9e%ba%e6%97%8b%e7%9f%a9%e9%98%b5">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsspiral-matrix">
 &lt;a href="https://leetcode-cn.com/problems/spiral-matrix">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsspiral-matrix">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个包含  m x n  个元素的矩阵（m 行，n 列），请按照顺时针螺旋顺序，返回矩阵中的所有元素。

示例  1:

```
输入:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
输出: [1,2,3,6,9,8,7,4,5]
```

示例  2:

```
输入:
[
 [1, 2, 3, 4],
 [5, 6, 7, 8],
 [9,10,11,12]
]
输出: [1,2,3,4,8,12,11,10,9,5,6,7]
```

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

```
Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]
```

Example 2:

```
Input:
[
 [1, 2, 3, 4],
 [5, 6, 7, 8],
 [9,10,11,12]
]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
 if not matrix:
 return []
 # 第一行，按顺序
 result = matrix.pop(0)
 # 最右侧
 for i, l in enumerate(matrix[:-1]):
 if l:
 result.append(matrix[i].pop())
 # 最后一行
 if matrix:
 result.extend(matrix.pop()[::-1])
 # 最左侧
 for i, l in enumerate(matrix[::-1]):
 if l:
 result.append(matrix[::-1][i].pop(0))
 # 递归，合并结果
 result.extend(self.spiralOrder(matrix))
 return result
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item><item><title>71. 简化路径</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/0/71/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/0/71/</guid><description>&lt;h1 id="模板">
 模板
 &lt;a class="anchor" href="#%e6%a8%a1%e6%9d%bf">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemssimplify-path">
 &lt;a href="https://leetcode-cn.com/problems/simplify-path/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemssimplify-path">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
以 Unix 风格给出一个文件的绝对路径，你需要简化它。或者换句话说，将其转换为规范路径。

在 Unix 风格的文件系统中，一个点（.）表示当前目录本身；此外，两个点 （..）  表示将目录切换到上一级（指向父目录）；两者都可以是复杂相对路径的组成部分。更多信息请参阅：Linux / Unix 中的绝对路径 vs 相对路径

请注意，返回的规范路径必须始终以斜杠 / 开头，并且两个目录名之间必须只有一个斜杠 /。最后一个目录名（如果存在）不能以 / 结尾。此外，规范路径必须是表示绝对路径的最短字符串。

示例 1：

```
输入："/home/"
输出："/home"
解释：注意，最后一个目录名后面没有斜杠。
```

示例 2：

```
输入："/../"
输出："/"
解释：从根目录向上一级是不可行的，因为根是你可以到达的最高级。
```

示例 3：

```
输入："/home//foo/"
输出："/home/foo"
解释：在规范路径中，多个连续斜杠需要用一个斜杠替换。
```

示例 4：

```
输入："/a/./b/../../c/"
输出："/c"
```

示例 5：

```
输入："/a/../../b/../c//.//"
输出："/c"
```

示例 6：

```
输入："/a//b////c/d//././/.."
输出："/a/b/c"
```

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given an absolute path for a file (Unix-style), simplify it. Or in other words, convert it to the canonical path.

In a UNIX-style file system, a period . refers to the current directory. Furthermore, a double period .. moves the directory up a level.

Note that the returned canonical path must always begin with a slash /, and there must be only a single slash / between two directory names. The last directory name (if it exists) must not end with a trailing /. Also, the canonical path must be the shortest string representing the absolute path.

Example 1:

```
Input: "/home/"
Output: "/home"
Explanation: Note that there is no trailing slash after the last directory name.
```

Example 2:

```
Input: "/../"
Output: "/"
Explanation: Going one level up from the root directory is a no-op, as the root level is the highest level you can go.
```

Example 3:

```
Input: "/home//foo/"
Output: "/home/foo"
Explanation: In the canonical path, multiple consecutive slashes are replaced by a single one.
```

Example 4:

```
Input: "/a/./b/../../c/"
Output: "/c"
```

Example 5:

```
Input: "/a/../../b/../c//.//"
Output: "/c"
```

Example 6:

```
Input: "/a//b////c/d//././/.."
Output: "/a/b/c"
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

先按 `/` 进行切割，然后创建一个 `stack`，判断为 `.` 就跳过，为 `..` 就 `pop`（`stack` 非空），其他就 `append`

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def simplifyPath(self, path: str) -> str:
 ps = [p for p in path.split('/') if p]
 stack = list()
 for p in ps:
 if p == '.':
 continue
 elif p == '..':
 if stack:
 stack.pop()
 else:
 stack.append(p)

 return '/' + '/'.join(stack)
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item><item><title>110. 平衡二叉树</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/1/110/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/1/110/</guid><description>&lt;h1 id="平衡二叉树">
 平衡二叉树
 &lt;a class="anchor" href="#%e5%b9%b3%e8%a1%a1%e4%ba%8c%e5%8f%89%e6%a0%91">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsbalanced-binary-tree">
 &lt;a href="https://leetcode-cn.com/problems/balanced-binary-tree/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsbalanced-binary-tree">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个二叉树，判断它是否是高度平衡的二叉树。

本题中，一棵高度平衡二叉树定义为：

一个二叉树每个节点   的左右两个子树的高度差的绝对值不超过 1。

示例 1:

```
给定二叉树 [3,9,20,null,null,15,7]

 3
 / \
 9 20
 / \
 15 7
```

返回 true 。

示例 2:

```
给定二叉树 [1,2,2,3,3,null,null,4,4]

 1
 / \
 2 2
 / \
 3 3
 / \
 4 4
返回 false 。
```

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

Example 1:

```
Given the following tree [3,9,20,null,null,15,7]:

 3
 / \
 9 20
 / \
 15 7
```

Return true.

Example 2:

```
Given the following tree [1,2,2,3,3,null,null,4,4]:

 1
 / \
 2 2
 / \
 3 3
 / \
 4 4

Return false.
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class Solution:
 def isBalanced(self, root: TreeNode) -> bool:
 return self.height(root) >= 0

 def height(self, root: TreeNode) -> int:
 if root is None:
 return 0
 lh = self.height(root.left)
 rh = self.height(root.right)
 if lh >= 0 and rh >=0 and abs(lh - rh) &lt;= 1:
 return max(lh, rh) + 1

 return -1
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item><item><title>146. LRU 缓存机制</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/1/146/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/1/146/</guid><description>&lt;h1 id="lru-缓存机制">
 LRU 缓存机制
 &lt;a class="anchor" href="#lru-%e7%bc%93%e5%ad%98%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemslru-cache">
 &lt;a href="https://leetcode-cn.com/problems/lru-cache">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemslru-cache">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
运用你所掌握的数据结构，设计和实现一个 [LRU (最近最少使用)](https://baike.baidu.com/item/LRU) 缓存机制。它应该支持以下操作： 获取数据 get 和 写入数据 put 。

获取数据 get(key) - 如果密钥 (key) 存在于缓存中，则获取密钥的值（总是正数），否则返回 -1。
写入数据 put(key, value) - 如果密钥已经存在，则变更其数据值；如果密钥不存在，则插入该组「密钥 / 数据值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。

进阶:

你是否可以在  `O(1)` 时间复杂度内完成这两种操作？

示例:

```
LRUCache cache = new LRUCache( 2 /* 缓存容量 */ );

cache.put(1, 1);
cache.put(2, 2);
cache.get(1); // 返回 1
cache.put(3, 3); // 该操作会使得密钥 2 作废
cache.get(2); // 返回 -1 (未找到)
cache.put(4, 4); // 该操作会使得密钥 1 作废
cache.get(1); // 返回 -1 (未找到)
cache.get(3); // 返回 3
cache.get(4); // 返回 4
```

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Design and implement a data structure for [Least Recently Used (LRU)](https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU) cache. It should support the following operations: get and put.

get(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.
put(key, value) - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.

The cache is initialized with a positive capacity.

Follow up:
Could you do both operations in O(1) time complexity?

Example:

```
LRUCache cache = new LRUCache( 2 /* capacity */ );

cache.put(1, 1);
cache.put(2, 2);
cache.get(1); // returns 1
cache.put(3, 3); // evicts key 2
cache.get(2); // returns -1 (not found)
cache.put(4, 4); // evicts key 1
cache.get(1); // returns -1 (not found)
cache.get(3); // returns 3
cache.get(4); // returns 4

```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
class DLinkedNode:
 def __init__(self):
 self.key = 0
 self.val = 0
 self.pre = None
 self.next = None

class LRUCache:

 def _add(self, node: DLinkedNode):
 node.next = self.head.next
 node.pre = self.head
 self.head.next.pre = node
 self.head.next = node

 def _remove(self, node: DLinkedNode):
 if not node or not node.pre or not node.next:
 return
 node.pre.next = node.next
 node.next.pre = node.pre

 def _move_to_head(self, node: DLinkedNode):
 self._remove(node)
 self._add(node)

 def _pop_tail(self) -> DLinkedNode:
 if self.size == 0:
 return None

 node = self.tail.pre
 self._remove(node)
 return node

 def __init__(self, capacity: int):
 self.capacity = capacity
 self.size = 0
 self.cache = {}
 self.head = DLinkedNode()
 self.tail = DLinkedNode()
 self.head.next = self.tail
 self.tail.pre = self.head


 def get(self, key: int) -> int:
 node = self.cache.get(key, None)
 if not node:
 return -1
 self._move_to_head(node)
 return node.val

 def put(self, key: int, value: int) -> None:
 node = self.cache.get(key, None)
 if not node:
 node = DLinkedNode()
 node.key = key
 node.val = value
 self.cache[key] = node
 self.size = self.size + 1
 self._add(node)

 if self.size > self.capacity:
 node = self._pop_tail()
 del(self.cache[node.key])
 else:
 node.val = value
 self._move_to_head(node)
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item><item><title>206. 反转链表</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/2/206/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/2/206/</guid><description>&lt;h1 id="反转链表">
 反转链表
 &lt;a class="anchor" href="#%e5%8f%8d%e8%bd%ac%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemsreverse-linked-list">
 &lt;a href="https://leetcode-cn.com/problems/reverse-linked-list/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemsreverse-linked-list">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给你单链表的头节点 head ，请你反转链表，并返回反转后的链表。

示例 1：

```shell
输入：head = [1,2,3,4,5]
输出：[5,4,3,2,1]
```

示例 2：

```shell
输入：head = [1,2]
输出：[2,1]
```

示例 3：

```shell
输入：head = []
输出：[]
```

提示：

```shell
链表中节点的数目范围是 [0, 5000]
-5000 &lt;= Node.val &lt;= 5000
```

进阶：链表可以选用迭代或递归方式完成反转。你能否用两种方法解决这道题？

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

Given the head of a singly linked list, reverse the list, and return the reversed list.

Example 1:

```
Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]
```

Example 2:

```
Input: head = [1,2]
Output: [2,1]
```

Example 3:

```
Input: head = []
Output: []
```

Constraints:

```
The number of nodes in the list is the range [0, 5000].
-5000 &lt;= Node.val &lt;= 5000
```

Follow up: A linked list can be reversed either iteratively or recursively. Could you implement both?

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go
/**
 * Definition for singly-linked list.
 * type ListNode struct {
 * Val int
 * Next *ListNode
 * }
 */
func reverseList(head *ListNode) *ListNode {
 var pre *ListNode = nil
 var next *ListNode = nil
 var cur *ListNode = head
 for cur != nil {
 next = cur.Next
 cur.Next = pre
 pre = cur
 cur = next
 }

 return pre
}
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item><item><title>671. 二叉树中第二小的节点</title><link>https://kingye.me/study-algs/docs/advanced/leetcode/6/671/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-algs/docs/advanced/leetcode/6/671/</guid><description>&lt;h1 id="二叉树中第二小的节点">
 二叉树中第二小的节点
 &lt;a class="anchor" href="#%e4%ba%8c%e5%8f%89%e6%a0%91%e4%b8%ad%e7%ac%ac%e4%ba%8c%e5%b0%8f%e7%9a%84%e8%8a%82%e7%82%b9">#&lt;/a>
&lt;/h1>
&lt;h2 id="题目httpsleetcode-cncomproblemssecond-minimum-node-in-a-binary-tree">
 &lt;a href="https://leetcode-cn.com/problems/second-minimum-node-in-a-binary-tree/">题目&lt;/a>
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%aehttpsleetcode-cncomproblemssecond-minimum-node-in-a-binary-tree">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-0" checked="checked" />
&lt;label for="tabs-leetcode-problem-0">中文&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
给定一个非空特殊的二叉树，每个节点都是正数，并且每个节点的子节点数量只能为  2  或  0。如果一个节点有两个子节点的话，那么这个节点的值不大于它的子节点的值。

给出这样的一个二叉树，你需要输出所有节点中的第二小的值。如果第二小的值不存在的话，输出 -1 。

示例 1:

```
输入:
 2
 / \
 2 5
 / \
 5 7

输出: 5
说明: 最小的值是 2 ，第二小的值是 5 。
```

示例 2:

```
输入:
 2
 / \
 2 2

输出: -1
说明: 最小的值是 2, 但是不存在第二小的值。
```

&lt;/div>



&lt;input type="radio" class="toggle" name="tabs-leetcode-problem" id="tabs-leetcode-problem-1" />
&lt;label for="tabs-leetcode-problem-1">English&lt;/label>
&lt;div class="book-tabs-content markdown-inner">
Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. More formally, the property root.val = min(root.left.val, root.right.val) always holds.

Given such a binary tree, you need to output the second minimum value in the set made of all the nodes' value in the whole tree.

If no such second minimum value exists, output -1 instead.

Example 1:

```
Input:
 2
 / \
 2 5
 / \
 5 7

Output: 5
Explanation: The smallest value is 2, the second smallest value is 5.
```

Example 2:

```
Input:
 2
 / \
 2 2

Output: -1
Explanation: The smallest value is 2, but there isn't any second smallest value.
```

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-0" checked="checked" />
&lt;label for="tabs-leetcode-analysis-0">基础&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

root 肯定是最小的。
那就维护一个大于 root 的最小值，遍历整棵树，如果这个值不存在，就返回 -1

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-1" />
&lt;label for="tabs-leetcode-analysis-1">进阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;input type="radio" class="toggle" name="tabs-leetcode-analysis" id="tabs-leetcode-analysis-2" />
&lt;label for="tabs-leetcode-analysis-2">高阶&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

&lt;/div>


&lt;/div>

&lt;hr>
&lt;h2 id="题解">
 题解
 &lt;a class="anchor" href="#%e9%a2%98%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;div class="book-tabs">


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-0" checked="checked" />
&lt;label for="tabs-leetcode-solution-0">C&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-1" />
&lt;label for="tabs-leetcode-solution-1">C&amp;#43;&amp;#43;&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c++

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-2" />
&lt;label for="tabs-leetcode-solution-2">C#&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```c#

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-3" />
&lt;label for="tabs-leetcode-solution-3">Go&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```go

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-4" />
&lt;label for="tabs-leetcode-solution-4">Java&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```java

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-5" />
&lt;label for="tabs-leetcode-solution-5">JavaScript&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```javascript
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-6" />
&lt;label for="tabs-leetcode-solution-6">Kotlin&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```kotlin

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-7" />
&lt;label for="tabs-leetcode-solution-7">PHP&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```php

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-8" />
&lt;label for="tabs-leetcode-solution-8">Python2&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-9" />
&lt;label for="tabs-leetcode-solution-9">Python3&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```python
# Definition for a binary tree node.
# class TreeNode:
# def __init__(self, x):
# self.val = x
# self.left = None
# self.right = None

class Solution:
 def findSecondMinimumValue(self, root: TreeNode) -> int:
 if root is None:
 return -1
 secondMin = self.getSecodeMin(root, root.val, float('inf'))
 if secondMin == float('inf'):
 return -1
 else:
 return secondMin

 def getSecodeMin(self, node: TreeNode, rootVal: int, secondMin: int) -> int:
 if node is None:
 return secondMin

 if node.val != rootVal and node.val &lt; secondMin:
 secondMin = node.val
 print(secondMin)

 return min(self.getSecodeMin(node.left, rootVal, secondMin), self.getSecodeMin(node.right, rootVal, secondMin))
```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-10" />
&lt;label for="tabs-leetcode-solution-10">Ruby&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```ruby

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-11" />
&lt;label for="tabs-leetcode-solution-11">Rust&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```rust

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-12" />
&lt;label for="tabs-leetcode-solution-12">Scala&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```scala

```

&lt;/div>


---


&lt;input type="radio" class="toggle" name="tabs-leetcode-solution" id="tabs-leetcode-solution-13" />
&lt;label for="tabs-leetcode-solution-13">Swift&lt;/label>
&lt;div class="book-tabs-content markdown-inner">

```swift

```

&lt;/div>


---


&lt;/div></description></item></channel></rss>